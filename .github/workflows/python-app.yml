# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: build

on:
  push:
    branches:
      - "main"
      - "feature/**"
  pull_request:
    branches:
      - "main"
      - "feature/**"

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.12
      uses: actions/setup-python@v3
      with:
        python-version: "3.12"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade setuptools
        # install package in editable mode and use current lock file 
        # for build reproducibility
        pip install -e . -c requirements.txt -r dev-requirements.txt
    - name: Lint the code
      run: |
        black --check .
    - name: Build wheel
      run: |
        python -m build
    - name: Archive dist
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: |
            dist
    - name: Test with pytest
      env:
        DROPBOX_TOKEN: ${{ secrets.DROPBOX_TOKEN }}
        DROPBOX_APP_KEY: ${{ secrets.DROPBOX_APP_KEY }}
        DROPBOX_APP_SECRET: ${{ secrets.DROPBOX_APP_SECRET }}

        SFTP_HOST: ${{ secrets.SFTP_HOST }}
        SFTP_PORT: ${{ secrets.SFTP_PORT }}
        SFTP_USERNAME: ${{ secrets.SFTP_USERNAME }}
        SFTP_PRIVATE_KEY_BASE64: ${{ secrets.SFTP_PRIVATE_KEY_BASE64 }}
        SFTP_KEY_PATH: test.key

        RERUN_COUNT: 5
        RERUN_DELAY: 10
      run: |
        echo ${SFTP_PRIVATE_KEY_BASE64} | base64 -d > ${SFTP_KEY_PATH}
        chmod 600 ${SFTP_KEY_PATH}
        # run fs tests
        pytest -n auto -m 'not slow and not sftp and not dropbox' --reruns $RERUN_COUNT --reruns-delay $RERUN_DELAY --log-cli-level DEBUG
        # sftp tests, limit concurrency so that server is okay
        pytest -n 4 -m 'not slow and sftp' --reruns $RERUN_COUNT --reruns-delay $RERUN_DELAY --log-cli-level DEBUG
        # dropbox tests (no concurrency, so that API rate limits are not hit)
        pytest -m 'not slow and dropbox' --reruns $RERUN_COUNT --reruns-delay $RERUN_DELAY --log-cli-level DEBUG
